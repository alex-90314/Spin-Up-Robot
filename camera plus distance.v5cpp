#pragma region VEXcode Generated Robot Configuration
// Make sure all required headers are included.
#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <math.h>
#include <string.h>


#include "vex.h"

using namespace vex;

// Brain should be defined by default
brain Brain;


// START V5 MACROS
#define waitUntil(condition)                                                   \
  do {                                                                         \
    wait(5, msec);                                                             \
  } while (!(condition))

#define repeat(iterations)                                                     \
  for (int iterator = 0; iterator < iterations; iterator++)
// END V5 MACROS


// Robot configuration code.
/*vex-vision-config:begin*/
vision::signature Vision11__SIG_1 = vision::signature (1, 2501, 3671, 3086,-7003, -6311, -6657,7.6, 0);
vision Vision11 = vision (PORT11, 50, Vision11__SIG_1);
/*vex-vision-config:end*/
/*vex-vision-config:begin*/
vision::signature Vision12__SIG_1 = vision::signature (1, 1887, 3037, 2462,-6225, -5055, -5640,4.3, 0);
vision Vision12 = vision (PORT12, 50, Vision12__SIG_1);
/*vex-vision-config:end*/
sonar RangeFinderG = sonar(Brain.ThreeWirePort.G);
motor spinMtr = motor(PORT6, ratio18_1, true);

accelerometer accelX = accelerometer(Brain.ThreeWirePort.A, true);
accelerometer accelY = accelerometer(Brain.ThreeWirePort.B, true);
accelerometer accelZ = accelerometer(Brain.ThreeWirePort.C, true);
controller Controller1 = controller(primary);



// define variable for remote controller enable/disable
bool RemoteControlCodeEnabled = true;
#pragma endregion VEXcode Generated Robot Configuration

/*----------------------------------------------------------------------------*/
/*                                                                            */
/*    Module:       main.cpp                                                  */
/*    Author:       {author}                                                  */
/*    Created:      {date}                                                    */
/*    Description:  V5 project                                                */
/*                                                                            */
/*----------------------------------------------------------------------------*/

// Include the V5 Library
#include "vex.h"
  
// Allows for easier use of the VEX Library
using namespace vex;



int main() {
  spinMtr.spin(forward);
  while (true){
    spinMtr.setVelocity(Controller1.Axis1.position()/4, rpm);
    Brain.Screen.setCursor(1,1);
    Vision11.takeSnapshot(Vision11__SIG_1);
    if (Vision11.objectCount > 0){
      Brain.Screen.print("Left: Object seen");
    } else {
      Brain.Screen.print("Left: Object not seen");
    }
    Brain.Screen.setCursor(3,1);
    Vision12.takeSnapshot(Vision12__SIG_1);
    if (Vision12.objectCount > 0){
      Brain.Screen.print("Right: Object seen");
    } else {
      Brain.Screen.print("Right: Object not seen");
    }

    Brain.Screen.setCursor(5,1);
    Brain.Screen.print("Distance: %f",RangeFinderG.distance(inches));

    Brain.Screen.setCursor(7,1);
    Controller1.Screen.setCursor(1,1);
    Controller1.Screen.print("X: %f", accelX.acceleration());
    Controller1.Screen.setCursor(2,1);
    Controller1.Screen.print("Y: %f", accelY.acceleration());
    Controller1.Screen.setCursor(3,1);
    Controller1.Screen.print("Z: %f",accelZ.acceleration());
    Brain.Screen.print("X: %f  Y: %f  Z: %f",accelX.acceleration(), accelY.acceleration(), accelZ.acceleration());
    wait(0.05,seconds);
    Brain.Screen.clearScreen();
    Controller1.Screen.clearScreen();
  }
}
